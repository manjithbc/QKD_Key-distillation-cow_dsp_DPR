// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cow_dps_SHA256 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        message_address0,
        message_ce0,
        message_q0,
        digest_address0,
        digest_ce0,
        digest_we0,
        digest_d0,
        digest_address1,
        digest_ce1,
        digest_we1,
        digest_d1
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] message_address0;
output   message_ce0;
input  [7:0] message_q0;
output  [4:0] digest_address0;
output   digest_ce0;
output   digest_we0;
output  [7:0] digest_d0;
output  [4:0] digest_address1;
output   digest_ce1;
output   digest_we1;
output  [7:0] digest_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] H_addr_reg_357;
wire    ap_CS_fsm_state6;
wire   [2:0] H_addr_1_reg_362;
wire   [2:0] H_addr_2_reg_367;
wire    ap_CS_fsm_state7;
wire   [2:0] H_addr_3_reg_372;
wire   [31:0] H_q1;
reg   [31:0] a_reg_377;
wire   [31:0] H_q0;
reg   [31:0] b_reg_383;
wire   [2:0] H_addr_4_reg_389;
wire    ap_CS_fsm_state8;
wire   [2:0] H_addr_5_reg_394;
reg   [31:0] c_reg_399;
reg   [31:0] d_reg_405;
wire   [2:0] H_addr_6_reg_411;
wire    ap_CS_fsm_state9;
wire   [2:0] H_addr_7_reg_416;
reg   [31:0] e_reg_421;
reg   [31:0] f_reg_427;
reg   [31:0] g_reg_433;
wire    ap_CS_fsm_state10;
reg   [31:0] h_reg_439;
reg   [2:0] H_address0;
reg    H_ce0;
reg    H_we0;
reg   [31:0] H_d0;
reg   [2:0] H_address1;
reg    H_ce1;
reg    H_we1;
reg   [31:0] H_d1;
reg   [5:0] W_address0;
reg    W_ce0;
reg    W_we0;
reg   [31:0] W_d0;
wire   [31:0] W_q0;
reg    W_ce1;
wire   [31:0] W_q1;
reg    W_ce2;
wire   [31:0] W_q2;
reg   [5:0] paddedMessage_address0;
reg    paddedMessage_ce0;
reg    paddedMessage_we0;
reg   [7:0] paddedMessage_d0;
wire   [7:0] paddedMessage_q0;
reg    paddedMessage_ce1;
wire   [7:0] paddedMessage_q1;
reg    paddedMessage_ce2;
wire   [7:0] paddedMessage_q2;
reg    paddedMessage_ce3;
wire   [7:0] paddedMessage_q3;
wire    grp_SHA256_Pipeline_1_fu_173_ap_start;
wire    grp_SHA256_Pipeline_1_fu_173_ap_done;
wire    grp_SHA256_Pipeline_1_fu_173_ap_idle;
wire    grp_SHA256_Pipeline_1_fu_173_ap_ready;
wire   [2:0] grp_SHA256_Pipeline_1_fu_173_H_address0;
wire    grp_SHA256_Pipeline_1_fu_173_H_ce0;
wire    grp_SHA256_Pipeline_1_fu_173_H_we0;
wire   [31:0] grp_SHA256_Pipeline_1_fu_173_H_d0;
wire    grp_SHA256_Pipeline_2_fu_181_ap_start;
wire    grp_SHA256_Pipeline_2_fu_181_ap_done;
wire    grp_SHA256_Pipeline_2_fu_181_ap_idle;
wire    grp_SHA256_Pipeline_2_fu_181_ap_ready;
wire   [4:0] grp_SHA256_Pipeline_2_fu_181_message_address0;
wire    grp_SHA256_Pipeline_2_fu_181_message_ce0;
wire   [5:0] grp_SHA256_Pipeline_2_fu_181_paddedMessage_address0;
wire    grp_SHA256_Pipeline_2_fu_181_paddedMessage_ce0;
wire    grp_SHA256_Pipeline_2_fu_181_paddedMessage_we0;
wire   [7:0] grp_SHA256_Pipeline_2_fu_181_paddedMessage_d0;
wire    grp_SHA256_Pipeline_3_fu_189_ap_start;
wire    grp_SHA256_Pipeline_3_fu_189_ap_done;
wire    grp_SHA256_Pipeline_3_fu_189_ap_idle;
wire    grp_SHA256_Pipeline_3_fu_189_ap_ready;
wire   [5:0] grp_SHA256_Pipeline_3_fu_189_paddedMessage_address0;
wire    grp_SHA256_Pipeline_3_fu_189_paddedMessage_ce0;
wire    grp_SHA256_Pipeline_3_fu_189_paddedMessage_we0;
wire   [7:0] grp_SHA256_Pipeline_3_fu_189_paddedMessage_d0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_done;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_idle;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_ready;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce0;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address1;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce1;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address2;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce2;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address3;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce3;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_address0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_ce0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_we0;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_d0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_done;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_idle;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_ready;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_we0;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_d0;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address1;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce1;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address2;
wire    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce2;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_done;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_idle;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_ready;
wire   [5:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_W_address0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_W_ce0;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_h_1_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_h_1_out_ap_vld;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_a_3_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_a_3_out_ap_vld;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_b_3_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_b_3_out_ap_vld;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_c_3_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_c_3_out_ap_vld;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_d_1_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_d_1_out_ap_vld;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_e_3_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_e_3_out_ap_vld;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_f_3_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_f_3_out_ap_vld;
wire   [31:0] grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_g_3_out;
wire    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_g_3_out_ap_vld;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_done;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_idle;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_ready;
wire   [2:0] grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_H_address0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_H_ce0;
wire   [4:0] grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_address0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_ce0;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_we0;
wire   [7:0] grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_d0;
wire   [4:0] grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_address1;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_ce1;
wire    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_we1;
wire   [7:0] grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_d1;
reg    grp_SHA256_Pipeline_1_fu_173_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_SHA256_Pipeline_2_fu_181_ap_start_reg;
reg    grp_SHA256_Pipeline_3_fu_189_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start_reg;
reg    grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start_reg;
reg    grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start_reg;
wire    ap_CS_fsm_state11;
reg    grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state12;
wire   [31:0] add_ln96_fu_243_p2;
wire   [31:0] add_ln97_fu_249_p2;
wire   [31:0] add_ln98_fu_261_p2;
wire   [31:0] add_ln99_fu_267_p2;
wire   [31:0] add_ln100_fu_279_p2;
wire   [31:0] add_ln101_fu_285_p2;
wire   [31:0] add_ln102_fu_297_p2;
wire   [31:0] add_ln103_fu_303_p2;
reg   [16:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_block_state2_on_subcall_done;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 grp_SHA256_Pipeline_1_fu_173_ap_start_reg = 1'b0;
#0 grp_SHA256_Pipeline_2_fu_181_ap_start_reg = 1'b0;
#0 grp_SHA256_Pipeline_3_fu_189_ap_start_reg = 1'b0;
#0 grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start_reg = 1'b0;
#0 grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start_reg = 1'b0;
#0 grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start_reg = 1'b0;
#0 grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start_reg = 1'b0;
end

cow_dps_SHA256_H_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
H_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(H_address0),
    .ce0(H_ce0),
    .we0(H_we0),
    .d0(H_d0),
    .q0(H_q0),
    .address1(H_address1),
    .ce1(H_ce1),
    .we1(H_we1),
    .d1(H_d1),
    .q1(H_q1)
);

cow_dps_SHA256_W_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
W_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(W_address0),
    .ce0(W_ce0),
    .we0(W_we0),
    .d0(W_d0),
    .q0(W_q0),
    .address1(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address1),
    .ce1(W_ce1),
    .q1(W_q1),
    .address2(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address2),
    .ce2(W_ce2),
    .q2(W_q2)
);

cow_dps_SHA256_paddedMessage_RAM_1WNR_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 41 ),
    .AddressWidth( 6 ))
paddedMessage_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(paddedMessage_address0),
    .ce0(paddedMessage_ce0),
    .we0(paddedMessage_we0),
    .d0(paddedMessage_d0),
    .q0(paddedMessage_q0),
    .address1(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address1),
    .ce1(paddedMessage_ce1),
    .q1(paddedMessage_q1),
    .address2(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address2),
    .ce2(paddedMessage_ce2),
    .q2(paddedMessage_q2),
    .address3(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address3),
    .ce3(paddedMessage_ce3),
    .q3(paddedMessage_q3)
);

cow_dps_SHA256_Pipeline_1 grp_SHA256_Pipeline_1_fu_173(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SHA256_Pipeline_1_fu_173_ap_start),
    .ap_done(grp_SHA256_Pipeline_1_fu_173_ap_done),
    .ap_idle(grp_SHA256_Pipeline_1_fu_173_ap_idle),
    .ap_ready(grp_SHA256_Pipeline_1_fu_173_ap_ready),
    .H_address0(grp_SHA256_Pipeline_1_fu_173_H_address0),
    .H_ce0(grp_SHA256_Pipeline_1_fu_173_H_ce0),
    .H_we0(grp_SHA256_Pipeline_1_fu_173_H_we0),
    .H_d0(grp_SHA256_Pipeline_1_fu_173_H_d0)
);

cow_dps_SHA256_Pipeline_2 grp_SHA256_Pipeline_2_fu_181(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SHA256_Pipeline_2_fu_181_ap_start),
    .ap_done(grp_SHA256_Pipeline_2_fu_181_ap_done),
    .ap_idle(grp_SHA256_Pipeline_2_fu_181_ap_idle),
    .ap_ready(grp_SHA256_Pipeline_2_fu_181_ap_ready),
    .message_address0(grp_SHA256_Pipeline_2_fu_181_message_address0),
    .message_ce0(grp_SHA256_Pipeline_2_fu_181_message_ce0),
    .message_q0(message_q0),
    .paddedMessage_address0(grp_SHA256_Pipeline_2_fu_181_paddedMessage_address0),
    .paddedMessage_ce0(grp_SHA256_Pipeline_2_fu_181_paddedMessage_ce0),
    .paddedMessage_we0(grp_SHA256_Pipeline_2_fu_181_paddedMessage_we0),
    .paddedMessage_d0(grp_SHA256_Pipeline_2_fu_181_paddedMessage_d0)
);

cow_dps_SHA256_Pipeline_3 grp_SHA256_Pipeline_3_fu_189(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SHA256_Pipeline_3_fu_189_ap_start),
    .ap_done(grp_SHA256_Pipeline_3_fu_189_ap_done),
    .ap_idle(grp_SHA256_Pipeline_3_fu_189_ap_idle),
    .ap_ready(grp_SHA256_Pipeline_3_fu_189_ap_ready),
    .paddedMessage_address0(grp_SHA256_Pipeline_3_fu_189_paddedMessage_address0),
    .paddedMessage_ce0(grp_SHA256_Pipeline_3_fu_189_paddedMessage_ce0),
    .paddedMessage_we0(grp_SHA256_Pipeline_3_fu_189_paddedMessage_we0),
    .paddedMessage_d0(grp_SHA256_Pipeline_3_fu_189_paddedMessage_d0)
);

cow_dps_SHA256_Pipeline_VITIS_LOOP_62_2 grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start),
    .ap_done(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_done),
    .ap_idle(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_idle),
    .ap_ready(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_ready),
    .paddedMessage_address0(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address0),
    .paddedMessage_ce0(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce0),
    .paddedMessage_q0(paddedMessage_q0),
    .paddedMessage_address1(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address1),
    .paddedMessage_ce1(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce1),
    .paddedMessage_q1(paddedMessage_q1),
    .paddedMessage_address2(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address2),
    .paddedMessage_ce2(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce2),
    .paddedMessage_q2(paddedMessage_q2),
    .paddedMessage_address3(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address3),
    .paddedMessage_ce3(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce3),
    .paddedMessage_q3(paddedMessage_q3),
    .W_address0(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_address0),
    .W_ce0(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_ce0),
    .W_we0(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_we0),
    .W_d0(grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_d0)
);

cow_dps_SHA256_Pipeline_VITIS_LOOP_70_3 grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start),
    .ap_done(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_done),
    .ap_idle(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_idle),
    .ap_ready(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_ready),
    .W_address0(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address0),
    .W_ce0(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce0),
    .W_we0(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_we0),
    .W_d0(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_d0),
    .W_q0(W_q0),
    .W_address1(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address1),
    .W_ce1(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce1),
    .W_q1(W_q1),
    .W_address2(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address2),
    .W_ce2(grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce2),
    .W_q2(W_q2)
);

cow_dps_SHA256_Pipeline_VITIS_LOOP_81_4 grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start),
    .ap_done(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_done),
    .ap_idle(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_idle),
    .ap_ready(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_ready),
    .h(h_reg_439),
    .a(a_reg_377),
    .b(b_reg_383),
    .c(c_reg_399),
    .d(d_reg_405),
    .e(e_reg_421),
    .f(f_reg_427),
    .g(g_reg_433),
    .W_address0(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_W_address0),
    .W_ce0(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_W_ce0),
    .W_q0(W_q0),
    .h_1_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_h_1_out),
    .h_1_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_h_1_out_ap_vld),
    .a_3_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_a_3_out),
    .a_3_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_a_3_out_ap_vld),
    .b_3_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_b_3_out),
    .b_3_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_b_3_out_ap_vld),
    .c_3_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_c_3_out),
    .c_3_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_c_3_out_ap_vld),
    .d_1_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_d_1_out),
    .d_1_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_d_1_out_ap_vld),
    .e_3_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_e_3_out),
    .e_3_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_e_3_out_ap_vld),
    .f_3_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_f_3_out),
    .f_3_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_f_3_out_ap_vld),
    .g_3_out(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_g_3_out),
    .g_3_out_ap_vld(grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_g_3_out_ap_vld)
);

cow_dps_SHA256_Pipeline_VITIS_LOOP_107_5 grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start),
    .ap_done(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_done),
    .ap_idle(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_idle),
    .ap_ready(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_ready),
    .H_address0(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_H_address0),
    .H_ce0(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_H_ce0),
    .H_q0(H_q0),
    .digest_address0(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_address0),
    .digest_ce0(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_ce0),
    .digest_we0(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_we0),
    .digest_d0(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_d0),
    .digest_address1(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_address1),
    .digest_ce1(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_ce1),
    .digest_we1(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_we1),
    .digest_d1(grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SHA256_Pipeline_1_fu_173_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_SHA256_Pipeline_1_fu_173_ap_start_reg <= 1'b1;
        end else if ((grp_SHA256_Pipeline_1_fu_173_ap_ready == 1'b1)) begin
            grp_SHA256_Pipeline_1_fu_173_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SHA256_Pipeline_2_fu_181_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_SHA256_Pipeline_2_fu_181_ap_start_reg <= 1'b1;
        end else if ((grp_SHA256_Pipeline_2_fu_181_ap_ready == 1'b1)) begin
            grp_SHA256_Pipeline_2_fu_181_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SHA256_Pipeline_3_fu_189_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_SHA256_Pipeline_3_fu_189_ap_start_reg <= 1'b1;
        end else if ((grp_SHA256_Pipeline_3_fu_189_ap_ready == 1'b1)) begin
            grp_SHA256_Pipeline_3_fu_189_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start_reg <= 1'b1;
        end else if ((grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_ready == 1'b1)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start_reg <= 1'b1;
        end else if ((grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_ready == 1'b1)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start_reg <= 1'b1;
        end else if ((grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_ready == 1'b1)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start_reg <= 1'b1;
        end else if ((grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_ready == 1'b1)) begin
            grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_reg_377 <= H_q1;
        b_reg_383 <= H_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        c_reg_399 <= H_q1;
        d_reg_405 <= H_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        e_reg_421 <= H_q1;
        f_reg_427 <= H_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        g_reg_433 <= H_q1;
        h_reg_439 <= H_q0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        H_address0 = H_addr_7_reg_416;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        H_address0 = H_addr_5_reg_394;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        H_address0 = H_addr_3_reg_372;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        H_address0 = H_addr_1_reg_362;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        H_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        H_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        H_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        H_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        H_address0 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_H_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        H_address0 = grp_SHA256_Pipeline_1_fu_173_H_address0;
    end else begin
        H_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        H_address1 = H_addr_6_reg_411;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        H_address1 = H_addr_4_reg_389;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        H_address1 = H_addr_2_reg_367;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        H_address1 = H_addr_reg_357;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        H_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        H_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        H_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        H_address1 = 64'd0;
    end else begin
        H_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        H_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        H_ce0 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_H_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        H_ce0 = grp_SHA256_Pipeline_1_fu_173_H_ce0;
    end else begin
        H_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15) | ((grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7)))) begin
        H_ce1 = 1'b1;
    end else begin
        H_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        H_d0 = add_ln103_fu_303_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        H_d0 = add_ln101_fu_285_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        H_d0 = add_ln99_fu_267_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        H_d0 = add_ln97_fu_249_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        H_d0 = grp_SHA256_Pipeline_1_fu_173_H_d0;
    end else begin
        H_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        H_d1 = add_ln102_fu_297_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        H_d1 = add_ln100_fu_279_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        H_d1 = add_ln98_fu_261_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        H_d1 = add_ln96_fu_243_p2;
    end else begin
        H_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        H_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        H_we0 = grp_SHA256_Pipeline_1_fu_173_H_we0;
    end else begin
        H_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        H_we1 = 1'b1;
    end else begin
        H_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        W_address0 = grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_W_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        W_address0 = grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        W_address0 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_address0;
    end else begin
        W_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        W_ce0 = grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_W_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        W_ce0 = grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        W_ce0 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_ce0;
    end else begin
        W_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        W_ce1 = grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce1;
    end else begin
        W_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        W_ce2 = grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_ce2;
    end else begin
        W_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        W_d0 = grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_d0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        W_d0 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_d0;
    end else begin
        W_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        W_we0 = grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_W_we0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        W_we0 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_W_we0;
    end else begin
        W_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_done == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_SHA256_Pipeline_3_fu_189_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        paddedMessage_address0 = 64'd32;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        paddedMessage_address0 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        paddedMessage_address0 = grp_SHA256_Pipeline_3_fu_189_paddedMessage_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        paddedMessage_address0 = grp_SHA256_Pipeline_2_fu_181_paddedMessage_address0;
    end else begin
        paddedMessage_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        paddedMessage_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        paddedMessage_ce0 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        paddedMessage_ce0 = grp_SHA256_Pipeline_3_fu_189_paddedMessage_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        paddedMessage_ce0 = grp_SHA256_Pipeline_2_fu_181_paddedMessage_ce0;
    end else begin
        paddedMessage_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        paddedMessage_ce1 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce1;
    end else begin
        paddedMessage_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        paddedMessage_ce2 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce2;
    end else begin
        paddedMessage_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        paddedMessage_ce3 = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_paddedMessage_ce3;
    end else begin
        paddedMessage_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        paddedMessage_d0 = 8'd128;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        paddedMessage_d0 = grp_SHA256_Pipeline_3_fu_189_paddedMessage_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        paddedMessage_d0 = grp_SHA256_Pipeline_2_fu_181_paddedMessage_d0;
    end else begin
        paddedMessage_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        paddedMessage_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        paddedMessage_we0 = grp_SHA256_Pipeline_3_fu_189_paddedMessage_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        paddedMessage_we0 = grp_SHA256_Pipeline_2_fu_181_paddedMessage_we0;
    end else begin
        paddedMessage_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_SHA256_Pipeline_3_fu_189_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign H_addr_1_reg_362 = 64'd1;

assign H_addr_2_reg_367 = 64'd2;

assign H_addr_3_reg_372 = 64'd3;

assign H_addr_4_reg_389 = 64'd4;

assign H_addr_5_reg_394 = 64'd5;

assign H_addr_6_reg_411 = 64'd6;

assign H_addr_7_reg_416 = 64'd7;

assign H_addr_reg_357 = 64'd0;

assign add_ln100_fu_279_p2 = (e_reg_421 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_e_3_out);

assign add_ln101_fu_285_p2 = (f_reg_427 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_f_3_out);

assign add_ln102_fu_297_p2 = (g_reg_433 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_g_3_out);

assign add_ln103_fu_303_p2 = (h_reg_439 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_h_1_out);

assign add_ln96_fu_243_p2 = (a_reg_377 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_a_3_out);

assign add_ln97_fu_249_p2 = (b_reg_383 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_b_3_out);

assign add_ln98_fu_261_p2 = (c_reg_399 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_c_3_out);

assign add_ln99_fu_267_p2 = (d_reg_405 + grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_d_1_out);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_SHA256_Pipeline_2_fu_181_ap_done == 1'b0) | (grp_SHA256_Pipeline_1_fu_173_ap_done == 1'b0));
end

assign digest_address0 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_address0;

assign digest_address1 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_address1;

assign digest_ce0 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_ce0;

assign digest_ce1 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_ce1;

assign digest_d0 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_d0;

assign digest_d1 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_d1;

assign digest_we0 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_we0;

assign digest_we1 = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_digest_we1;

assign grp_SHA256_Pipeline_1_fu_173_ap_start = grp_SHA256_Pipeline_1_fu_173_ap_start_reg;

assign grp_SHA256_Pipeline_2_fu_181_ap_start = grp_SHA256_Pipeline_2_fu_181_ap_start_reg;

assign grp_SHA256_Pipeline_3_fu_189_ap_start = grp_SHA256_Pipeline_3_fu_189_ap_start_reg;

assign grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start = grp_SHA256_Pipeline_VITIS_LOOP_107_5_fu_230_ap_start_reg;

assign grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start = grp_SHA256_Pipeline_VITIS_LOOP_62_2_fu_194_ap_start_reg;

assign grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start = grp_SHA256_Pipeline_VITIS_LOOP_70_3_fu_200_ap_start_reg;

assign grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start = grp_SHA256_Pipeline_VITIS_LOOP_81_4_fu_205_ap_start_reg;

assign message_address0 = grp_SHA256_Pipeline_2_fu_181_message_address0;

assign message_ce0 = grp_SHA256_Pipeline_2_fu_181_message_ce0;

endmodule //cow_dps_SHA256
